name: test-workflow
on: 
  push:
    branches:
      - main

jobs:
    lint:
        runs-on: ubuntu-latest
        steps:
            - name: Get code
              uses: actions/checkout@v4
            - name: Install NodeJS
              uses: actions/setup-node@v4 
              with:
                node-version: 18
            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install Dependencies
              run: npm ci
            - name: Run Lint
              run: npx eslint --ext .jsx --fix src
            - name:  Display message
              run: echo "Ran lint"
    test_build:
        needs: lint
        runs-on: ubuntu-latest
        outputs:
          script-file: ${{steps.publish.outputs.script-file}}
        steps:
            - name: Get Code
              uses: actions/checkout@v4
            - name: Install NodeJS
              uses: actions/setup-node@v4
              with:
                node-version: 18
            - name: Cache dependencies
              uses: actions/cache@v4
              with:
                path: ~/.npm
                key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}
            - name: Install Dependencies
              run: npm ci
            - name: Run test
              run: npm test
            - name: Display 2nd message
              run: echo "Tested"
            - name: Build
              run: npm run build
            - name: Publish JS filename
              id: publish
              run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with: 
                name: dist-file
                path: dist
                # path: |
                #  dist
                #  package.json
            - name: Third message
              run: echo "Built project" 
    deploy:
      needs: test_build
      runs-on: ubuntu-latest
      steps:
        - name: Get build artifacts
          uses: actions/download-artifact@v4
          with:
            name: dist-files
        - name: Output contents
          run: ls
        - name: Output filename
          run: echo "${{ needs.test_build.outputs.script-file }}"
        - name: Deploy
          run: echo "Deploying..."